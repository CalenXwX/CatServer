--- ../src-base/minecraft/net/minecraft/entity/player/EntityPlayer.java
+++ ../src-work/minecraft/net/minecraft/entity/player/EntityPlayer.java
@@ -9,8 +9,6 @@
 import java.util.UUID;
 import javax.annotation.Nullable;
 import net.minecraft.block.Block;
-import net.minecraft.block.BlockBed;
-import net.minecraft.block.BlockHorizontal;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.enchantment.EnchantmentHelper;
@@ -32,7 +30,6 @@
 import net.minecraft.entity.passive.EntityHorse;
 import net.minecraft.entity.passive.EntityPig;
 import net.minecraft.entity.projectile.EntityFishHook;
-import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
 import net.minecraft.init.MobEffects;
 import net.minecraft.init.SoundEvents;
@@ -96,6 +93,13 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.entity.CraftItem;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerDropItemEvent;
+// CraftBukkit end
+
 @SuppressWarnings("incomplete-switch")
 public abstract class EntityPlayer extends EntityLivingBase
 {
@@ -112,7 +116,7 @@
     private InventoryEnderChest theInventoryEnderChest = new InventoryEnderChest();
     public Container inventoryContainer;
     public Container openContainer;
-    protected FoodStats foodStats = new FoodStats();
+    protected FoodStats foodStats = new FoodStats(this);
     protected int flyToggleTimer;
     public float prevCameraYaw;
     public float cameraYaw;
@@ -147,7 +151,17 @@
     private ItemStack itemStackMainHand;
     private final CooldownTracker cooldownTracker = this.createCooldownTracker();
     public EntityFishHook fishEntity;
-
+    // CraftBukkit start
+    public boolean fauxSleeping;
+    public String spawnWorld = "";
+    public int oldLevel = -1;
+    
+    @Override
+    public CraftHumanEntity getBukkitEntity() {
+        return (CraftHumanEntity) super.getBukkitEntity();
+    }
+    // CraftBukkit end
+    
     protected CooldownTracker createCooldownTracker()
     {
         return new CooldownTracker();
@@ -164,6 +178,9 @@
         this.setLocationAndAngles((double)blockpos.getX() + 0.5D, (double)(blockpos.getY() + 1), (double)blockpos.getZ() + 0.5D, 0.0F, 0.0F);
         this.unused180 = 180.0F;
         this.fireResistance = 20;
+
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityEvent.EntityConstructing(this));
+        super.capabilities = net.minecraftforge.event.ForgeEventFactory.gatherCapabilities((Entity)this);
     }
 
     protected void applyEntityAttributes()
@@ -437,6 +454,10 @@
     {
         return this.getHealth() <= 0.0F || this.isPlayerSleeping();
     }
+    
+    public boolean isMovementBlockedCB() {
+        return isMovementBlocked();
+    }
 
     public void closeScreen()
     {
@@ -771,7 +792,31 @@
                 entityitem.motionY += (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
                 entityitem.motionZ += Math.sin((double)f3) * (double)f2;
             }
-
+            // CraftBukkit start
+            Player player = (Player)getBukkitEntity();
+            CraftItem drop = new CraftItem(this.worldObj.getServer(), entityitem);
+            
+            PlayerDropItemEvent event = new PlayerDropItemEvent(player, drop);
+            this.worldObj.getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled())
+            {
+              org.bukkit.inventory.ItemStack cur = player.getInventory().getItemInHand();
+              if ((traceItem) && ((cur == null) || (cur.getAmount() == 0)))
+              {
+                player.getInventory().setItemInHand(drop.getItemStack());
+              }
+              else if ((traceItem) && (cur.isSimilar(drop.getItemStack())) && (drop.getItemStack().getAmount() == 1))
+              {
+                cur.setAmount(cur.getAmount() + 1);
+                player.getInventory().setItemInHand(cur);
+              }
+              else
+              {
+                player.getInventory().addItem(new org.bukkit.inventory.ItemStack[] { drop.getItemStack() });
+              }
+              return null;
+            }
+            // CraftBukkit end
             ItemStack itemstack = this.dropItemAndGetStack(entityitem);
 
             if (traceItem)
@@ -1078,14 +1123,16 @@
         return (float)i / (float)this.inventory.armorInventory.length;
     }
 
-    protected void damageEntity(DamageSource damageSrc, float damageAmount)
-    {
+    protected void damageEntity(DamageSource damageSrc, float damageAmount) {
+        this.damageEntity0(damageSrc,damageAmount);
+    }
+    protected boolean damageEntity0(DamageSource damageSrc, float damageAmount){
         if (!this.isEntityInvulnerable(damageSrc))
         {
             damageAmount = net.minecraftforge.common.ForgeHooks.onLivingHurt(this, damageSrc, damageAmount);
-            if (damageAmount <= 0) return;
+            if (damageAmount <= 0) return false;
             damageAmount = net.minecraftforge.common.ISpecialArmor.ArmorProperties.applyArmor(this, inventory.armorInventory, damageSrc, damageAmount);
-            if (damageAmount <= 0) return;
+            if (damageAmount <= 0) return false;
             damageAmount = this.applyPotionDamageCalculations(damageSrc, damageAmount);
             float f = damageAmount;
             damageAmount = Math.max(damageAmount - this.getAbsorptionAmount(), 0.0F);
@@ -1104,6 +1151,7 @@
                 }
             }
         }
+        return true;
     }
 
     public void openEditSign(TileEntitySign signTile)
